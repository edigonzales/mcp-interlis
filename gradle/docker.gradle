tasks.register('copyJar', Copy) {
    dependsOn 'bootJar'
    from file("$buildDir/libs/interlis-mcp.jar")
    into file("$projectDir/docker/image/tmp")
}

// Zum Publizieren der Images
tasks.register('buildAndPushMultiArchImage', Exec) {
    dependsOn 'copyJar'
    def githash = getCheckedOutGitCommitHash()
    def build_timestamp = getTimestamp()

    workingDir "$projectDir/docker/image"
    commandLine 'docker', 'buildx', 'build',
                '--cache-from', 'sogis/interlis-mcp:cache',
                '--cache-to', 'sogis/interlis-mcp:cache',
                '--platform', 'linux/amd64,linux/arm64',
                '-t', "sogis/interlis-mcp:$version.major",
                '-t', "sogis/interlis-mcp:$version.major.$version.minor",
                '-t', "sogis/interlis-mcp:$version.major.$version.minor.$version.build",
                '-t', "sogis/interlis-mcp:latest",
                '--label', "interlis-mcp.created=$build_timestamp", 
                '--label', "interlis-mcp.git_commit=$githash",
                '--label', "interlis-mcp.version=$version",
                '-f', 'Dockerfile',  '.', '--push'
                //'-f', 'Dockerfile',  '.'
}

def getCheckedOutGitCommitHash() {
    'git log -1 --pretty=%H'.execute().text.trim()
}

def getTimestamp() {
    def date = new Date()
    return date.format('yyyy-MM-dd HH:mm:ss')
}